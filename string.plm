/****h* plm/strings
 *
 * NAME
 *   Strings
 *
 * DESCRIPTION
 *   Subroutines to manipulate null-terminated strings
 *
 ******
 */

str:
do;

$include (globlit.inc)


/****f* strings/string$equal
 *
 * NAME
 *   string$equal -- tell if two strings are equal
 *
 * SYNOPSIS
 *   string$equal(p$str1, p$str2)
 *
 * DESCRIPTION
 *   Compares two null-terminated strings and tells if they are equal are not.
 *   Both arguments p$str1 and p$str2 are pointers to the first character
 *   of the respective string.  Any of these strings can be empty, and
 *   should be null-terminated.
 *
 * RETURN VALUE
 *   Returns the boolean value true if strings are equal and false otherwise.
 *
 ******
 */
    string$equal: procedure (p$str1, p$str2) boolean public;
        declare (p$str1, p$str2) pointer;
        declare str1 based p$str1 byte;
        declare str2 based p$str2 byte;
        do while str1 <> 0 and str2 <> 0 and str1 = str2;
            p$str1 = p$str1 + 1;
            p$str2 = p$str2 + 1;
        end;
        return str1 = 0 and str2 = 0;
    end string$equal;


/****f* strings/chr$upper
 *
 * NAME
 *   chr$upper -- convert a character to uppercase
 *
 * SYNOPSIS
 *   chr$upper(c)
 *
 * DESCRIPTION
 *   This function converts one character to uppercase.
 *
 ******
 */
    chr$upper: procedure (c) byte public;
        declare c byte;
        if c >= 'a' and c <= 'z' then
            return c and 06fh;
        else
            return c;
    end chr$upper;


end str;

