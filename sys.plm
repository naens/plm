/****h* plm/sys
 *
 * NAME
 *   sys -- the system module
 *
 * DESCRIPTION
 *   This module deals with OS-related stuff, which is not related to console
 *   and files.
 *
 ******
 */

$if not sys$lib
$set (sys$lib)

sys:
do;

$include (glob.inc)

/****f* sys/get_command_tail
 *
 * NAME
 *   get_command_tail -- return the pointer to the command tail
 *
 * SYNOPSIS
 *   call get_command_tail(p$str, len);
 *
 * DESCRIPTION
 *   Write the command tail into the area pointed by p$str of maximum length
 *   len.  The written string is null-terminated.
 *
 ******
 */
get_command_tail: procedure (p$str, len) public;
    declare p$str pointer;
    declare len uint;
    declare str based p$str (*) byte;
    declare psp$sel selector;
    declare psp based psp$sel structure (
        skip (80h) byte,
        length byte,
        buf (7Fh) byte);
    declare i uint;

    psp$sel = dos_get_psp;
    i = 1;    /* the first char is a space */
    do while i < psp.length and psp.buf(i) <> cr and i < len - 1;
        str(i - 1) = psp.buf(i);
        i = i + 1;
    end;
    str(i - 1) = 0;
end get_command_tail;

/****f* sys/terminate
 *
 * NAME
 *   terminate -- terminate the current program
 *
 * SYNOPSIS
 *   call terminate(code);
 *
 * DESCRIPTION
 *   Terminate the currently running program and return the code.
 *
 ******
 */
terminate: procedure (code) public;
    declare code byte;
    call dos_exit(code);
end terminate;

end;

$endif
